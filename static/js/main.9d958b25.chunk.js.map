{"version":3,"sources":["components/Board.js","App.js","index.js"],"names":["Board","useState","currentPlayer","setCurrentPlayer","isFinished","setIsFinished","player1Wins","setPlayer1Wins","player2Wins","setPlayer2Wins","boardArr","setBoardArr","winner","setWinner","checkTrue","item","newBoard","map","id","className","onClick","boardCopy","every","handleClick","prevState","App","rules","createRef","isShown","setIsShown","current","classList","toggle","ref","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAiKeA,EA/JD,WACZ,MAA0CC,mBAAS,WAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAsCJ,mBAAS,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAsCN,mBAAS,GAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KACA,EAAgCR,mBAAS,CACvC,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KATF,mBAAOS,EAAP,KAAiBC,EAAjB,KAWA,EAA4BV,mBAAS,IAArC,mBAAOW,EAAP,KAAeC,EAAf,KAqFMC,EAAY,SAACC,GACjB,MAAgB,KAATA,GAqBHC,EAAWN,EAASO,KAAI,SAACF,EAAMG,GAAP,OAC5B,qBAAKC,UAAU,SAASC,QAAS,kBAnBf,SAACF,GACnB,IAAIG,EAAS,YAAOX,GACpB,GAAIW,EAAUH,IAAOd,EACnB,OAAO,EAGTC,EAAcgB,EAAUC,MAAMR,IAE9BH,EAAYU,GACU,YAAlBnB,GACFmB,EAAUH,GAAM,IAChBf,EAAiB,YACU,YAAlBD,IACTmB,EAAUH,GAAM,IAChBf,EAAiB,YAKoBoB,CAAYL,IAAnD,SACGH,GAD0DG,MAO/D,OAhHMd,GAGCA,KAEAM,EAAS,KAAOA,EAAS,IACxBA,EAAS,KAAOA,EAAS,IACT,KAAhBA,EAAS,IACVA,EAAS,KAAOA,EAAS,IACxBA,EAAS,KAAOA,EAAS,IACT,KAAhBA,EAAS,IACVA,EAAS,KAAOA,EAAS,IACxBA,EAAS,KAAOA,EAAS,IACT,KAAhBA,EAAS,MAEXG,EAA0B,MAAhBH,EAAS,GAAa,UAAY,WACxB,MAAhBA,EAAS,GACXH,GAAe,SAACiB,GAAD,OAAeA,EAAY,KAE1Cf,GAAe,SAACe,GAAD,OAAeA,EAAY,KAE5CnB,GAAc,KAGbK,EAAS,KAAOA,EAAS,IACxBA,EAAS,KAAOA,EAAS,IACT,KAAhBA,EAAS,IACVA,EAAS,KAAOA,EAAS,IACxBA,EAAS,KAAOA,EAAS,IACT,KAAhBA,EAAS,MAEXG,EAA0B,MAAhBH,EAAS,GAAa,UAAY,WACxB,MAAhBA,EAAS,GACXH,GAAe,SAACiB,GAAD,OAAeA,EAAY,KAE1Cf,GAAe,SAACe,GAAD,OAAeA,EAAY,KAE5CnB,GAAc,KAGbK,EAAS,KAAOA,EAAS,IACxBA,EAAS,KAAOA,EAAS,IACT,KAAhBA,EAAS,IACVA,EAAS,KAAOA,EAAS,IACxBA,EAAS,KAAOA,EAAS,IACT,KAAhBA,EAAS,MAEXG,EAA0B,MAAhBH,EAAS,GAAa,UAAY,WACxB,MAAhBA,EAAS,GACXH,GAAe,SAACiB,GAAD,OAAeA,EAAY,KAE1Cf,GAAe,SAACe,GAAD,OAAeA,EAAY,KAE5CnB,GAAc,IAGdK,EAAS,KAAOA,EAAS,IACzBA,EAAS,KAAOA,EAAS,IACT,KAAhBA,EAAS,KAETG,EAA0B,MAAhBH,EAAS,GAAa,UAAY,WACxB,MAAhBA,EAAS,GACXH,GAAe,SAACiB,GAAD,OAAeA,EAAY,KAE1Cf,GAAe,SAACe,GAAD,OAAeA,EAAY,KAE5CnB,GAAc,KA+ClB,qCACE,wBAAQe,QA3CQ,WAClBT,EAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAC7CE,EAAU,IACVR,GAAc,GACdF,EAAiB,YAuCegB,UAAU,YAAxC,0BAIA,wBAAQC,QAzCc,WACxBX,EAAe,GACfF,EAAe,IAuCuBY,UAAU,YAA9C,4BAIA,uBACA,sBAAKA,UAAU,QAAf,UACE,sBAAKA,UAAU,UAAf,8BACmB,uCADnB,MACwC,4BAAIb,OAG5C,sBAAKa,UAAU,UAAf,8BACmB,uCADnB,MACwC,4BAAIX,UAI7CI,EAAS,qDAAcA,EAAd,OAA8B,KAExC,qBAAKO,UAAU,QAAf,SAAwBH,QC7HfS,MA5Bf,WACE,IAAIC,EAAQC,sBAEZ,EAA8B1B,oBAAS,GAAvC,mBAAO2B,EAAP,KAAgBC,EAAhB,KAOA,OACE,mCACE,sBAAKV,UAAU,MAAf,UACE,8CACc,uBADd,qCAGA,wBAAQA,UAAU,YAAYC,QAXZ,WACtBM,EAAMI,QAAQC,UAAUC,OAAO,UAC/BH,GAAW,SAACL,GAAD,OAAgBA,MASvB,SACGI,EAAU,iBAAmB,sBAEhC,qBAAKT,UAAU,QAAQc,IAAKP,EAA5B,SACE,6EAEF,cAAC,EAAD,UCpBRQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9d958b25.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../styles/Board.scss\";\r\nconst Board = () => {\r\n  const [currentPlayer, setCurrentPlayer] = useState(\"player1\");\r\n  const [isFinished, setIsFinished] = useState(false);\r\n  const [player1Wins, setPlayer1Wins] = useState(0);\r\n  const [player2Wins, setPlayer2Wins] = useState(0);\r\n  const [boardArr, setBoardArr] = useState([\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n  ]);\r\n  const [winner, setWinner] = useState(\"\");\r\n\r\n  const checkForWin = () => {\r\n    if (isFinished) {\r\n      return;\r\n    }\r\n    if (!isFinished) {\r\n      if (\r\n        (boardArr[0] === boardArr[3] &&\r\n          boardArr[0] === boardArr[6] &&\r\n          boardArr[0] !== \"\") ||\r\n        (boardArr[0] === boardArr[4] &&\r\n          boardArr[0] === boardArr[8] &&\r\n          boardArr[0] !== \"\") ||\r\n        (boardArr[0] === boardArr[1] &&\r\n          boardArr[0] === boardArr[2] &&\r\n          boardArr[0] !== \"\")\r\n      ) {\r\n        setWinner(boardArr[0] === \"O\" ? \"Gracz 1\" : \"Gracz 2\");\r\n        if (boardArr[0] === \"O\") {\r\n          setPlayer1Wins((prevState) => prevState + 1);\r\n        } else {\r\n          setPlayer2Wins((prevState) => prevState + 1);\r\n        }\r\n        setIsFinished(true);\r\n      }\r\n      if (\r\n        (boardArr[6] === boardArr[7] &&\r\n          boardArr[6] === boardArr[8] &&\r\n          boardArr[6] !== \"\") ||\r\n        (boardArr[6] === boardArr[4] &&\r\n          boardArr[6] === boardArr[2] &&\r\n          boardArr[6] !== \"\")\r\n      ) {\r\n        setWinner(boardArr[6] === \"O\" ? \"Gracz 1\" : \"Gracz 2\");\r\n        if (boardArr[6] === \"O\") {\r\n          setPlayer1Wins((prevState) => prevState + 1);\r\n        } else {\r\n          setPlayer2Wins((prevState) => prevState + 1);\r\n        }\r\n        setIsFinished(true);\r\n      }\r\n      if (\r\n        (boardArr[5] === boardArr[2] &&\r\n          boardArr[5] === boardArr[8] &&\r\n          boardArr[5] !== \"\") ||\r\n        (boardArr[5] === boardArr[4] &&\r\n          boardArr[5] === boardArr[3] &&\r\n          boardArr[5] !== \"\")\r\n      ) {\r\n        setWinner(boardArr[5] === \"O\" ? \"Gracz 1\" : \"Gracz 2\");\r\n        if (boardArr[5] === \"O\") {\r\n          setPlayer1Wins((prevState) => prevState + 1);\r\n        } else {\r\n          setPlayer2Wins((prevState) => prevState + 1);\r\n        }\r\n        setIsFinished(true);\r\n      }\r\n      if (\r\n        boardArr[1] === boardArr[4] &&\r\n        boardArr[1] === boardArr[7] &&\r\n        boardArr[1] !== \"\"\r\n      ) {\r\n        setWinner(boardArr[1] === \"O\" ? \"Gracz 1\" : \"Gracz 2\");\r\n        if (boardArr[1] === \"O\") {\r\n          setPlayer1Wins((prevState) => prevState + 1);\r\n        } else {\r\n          setPlayer2Wins((prevState) => prevState + 1);\r\n        }\r\n        setIsFinished(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setBoardArr([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\r\n    setWinner(\"\");\r\n    setIsFinished(false);\r\n    setCurrentPlayer(\"player1\");\r\n  };\r\n  const handleResetPoints = () => {\r\n    setPlayer2Wins(0);\r\n    setPlayer1Wins(0);\r\n  };\r\n\r\n  const checkTrue = (item) => {\r\n    return item !== \"\";\r\n  };\r\n\r\n  const handleClick = (id) => {\r\n    let boardCopy = [...boardArr];\r\n    if (boardCopy[id] || isFinished) {\r\n      return 0;\r\n    }\r\n\r\n    setIsFinished(boardCopy.every(checkTrue));\r\n\r\n    setBoardArr(boardCopy);\r\n    if (currentPlayer === \"player1\") {\r\n      boardCopy[id] = \"O\";\r\n      setCurrentPlayer(\"player2\");\r\n    } else if (currentPlayer === \"player2\") {\r\n      boardCopy[id] = \"X\";\r\n      setCurrentPlayer(\"player1\");\r\n    }\r\n  };\r\n\r\n  const newBoard = boardArr.map((item, id) => (\r\n    <div className=\"square\" onClick={() => handleClick(id)} key={id}>\r\n      {item}\r\n    </div>\r\n  ));\r\n\r\n  checkForWin();\r\n\r\n  return (\r\n    <>\r\n      <button onClick={handleReset} className=\"reset-btn\">\r\n        Resetuj pola\r\n      </button>\r\n\r\n      <button onClick={handleResetPoints} className=\"reset-btn\">\r\n        Resetuj punkty\r\n      </button>\r\n\r\n      <br />\r\n      <div className=\"score\">\r\n        <div className=\"counter\">\r\n          Wynik Gracza 1 ( <strong>O</strong> ) <p>{player1Wins}</p>\r\n        </div>\r\n\r\n        <div className=\"counter\">\r\n          Wynik Gracza 2 ( <strong>X</strong> ) <p>{player2Wins}</p>\r\n        </div>\r\n      </div>\r\n\r\n      {winner ? <h1>Zwycięża {winner} </h1> : null}\r\n\r\n      <div className=\"board\">{newBoard}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import \"./styles/App.scss\";\nimport Board from \"./components/Board\";\nimport React, { useState, createRef } from \"react\";\nfunction App() {\n  let rules = createRef();\n\n  const [isShown, setIsShown] = useState(false);\n\n  const handleShowRules = () => {\n    rules.current.classList.toggle(\"active\");\n    setIsShown((prevState) => !prevState);\n  };\n\n  return (\n    <>\n      <div className=\"App\">\n        <h1>\n          TIC TAC TOE <br /> (kółko i krzyżyk)\n        </h1>\n        <button className=\"rules-btn\" onClick={handleShowRules}>\n          {isShown ? \"Zamknij zasady\" : \"Pokaż zasady\"}\n        </button>\n        <div className=\"rules\" ref={rules}>\n          <h1>Zasady gry w kółko i krzyżyk</h1>\n        </div>\n        <Board />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}